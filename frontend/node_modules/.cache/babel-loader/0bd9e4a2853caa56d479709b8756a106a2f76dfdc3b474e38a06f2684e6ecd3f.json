{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTHIKEYA REDDY\\\\Desktop\\\\real\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport MetricsCard from \"./MetricsCard\";\nimport styles from \"../styles/Dashboard.module.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\n\n// Styled Components for ML Info Section\nconst MLInfoCard = styled.div`\n  background-color: #2d2d2d;\n  padding: 20px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n_c = MLInfoCard;\nconst MLInfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c2 = MLInfoGrid;\nconst MLInfoTitle = styled.h3`\n  color: white;\n  font-size: 1.2rem;\n  margin-bottom: 15px;\n`;\n_c3 = MLInfoTitle;\nconst MLInfoText = styled.p`\n  color: #ccc;\n  margin: 5px 0;\n`;\n_c4 = MLInfoText;\nconst PredictionInfo = ({\n  mlInfo\n}) => {\n  var _mlInfo$accuracy_metr;\n  return /*#__PURE__*/_jsxDEV(MLInfoCard, {\n    children: [/*#__PURE__*/_jsxDEV(MLInfoTitle, {\n      children: \"Machine Learning Model Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MLInfoGrid, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: [\"Model Architecture: \", mlInfo.model_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: [\"Training Window: \", mlInfo.sequence_length, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: \"Features Used:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            color: '#999',\n            marginLeft: '20px'\n          },\n          children: mlInfo.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: feature\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: \"Model Performance Metrics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), mlInfo.accuracy_metrics.mse !== null ? /*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: [\"Mean Squared Error: \", (_mlInfo$accuracy_metr = mlInfo.accuracy_metrics.mse) === null || _mlInfo$accuracy_metr === void 0 ? void 0 : _mlInfo$accuracy_metr.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(MLInfoText, {\n          children: \"Collecting performance data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n_c5 = PredictionInfo;\nconst Dashboard = () => {\n  _s();\n  var _metrics$system, _metrics$system2, _metrics$system3, _metrics$cpu, _metrics$system4, _metrics$cpu2, _metrics$cpu2$usage, _metrics$predictions, _metrics$predictions$, _metrics$predictions$2, _metrics$predictions$3, _metrics$memory, _metrics$memory$perce, _metrics$memory2, _metrics$gpu, _metrics$gpu2, _metrics$gpu2$usage, _metrics$gpu3, _metrics$gpu4, _metrics$gpu5, _metrics$gpu5$memory, _metrics$cpu3, _metrics$cpu3$frequen, _metrics$cpu4, _metrics$cpu4$perform, _metrics$cpu4$perform2, _metrics$gpu6, _metrics$predictions2, _metrics$disk, _metrics$network, _metrics$network2;\n  const [metrics, setMetrics] = useState({\n    cpu: {\n      usage: 0,\n      frequency: 0,\n      cores: 0,\n      performance: {}\n    },\n    memory: {\n      percent: 0,\n      available: 0,\n      total: 0,\n      swap_percent: 0\n    },\n    gpu: {\n      available: false,\n      usage: 0,\n      type: 'N/A',\n      memory: null\n    },\n    predictions: {},\n    ml_info: {\n      model_type: '',\n      sequence_length: 0,\n      features: [],\n      accuracy_metrics: {\n        mse: null\n      }\n    }\n  });\n  const [historicalData, setHistoricalData] = useState([]);\n  useEffect(() => {\n    socket.on(\"update_metrics\", data => {\n      try {\n        const parsedData = JSON.parse(data);\n        setMetrics(prevMetrics => ({\n          ...prevMetrics,\n          ...parsedData\n        }));\n\n        // Update historical data\n        setHistoricalData(prev => {\n          var _parsedData$cpu, _parsedData$memory, _parsedData$gpu, _parsedData$predictio, _parsedData$predictio2, _parsedData$predictio3;\n          const newData = [...prev, {\n            time: new Date().toLocaleTimeString(),\n            cpu: ((_parsedData$cpu = parsedData.cpu) === null || _parsedData$cpu === void 0 ? void 0 : _parsedData$cpu.usage) || 0,\n            memory: ((_parsedData$memory = parsedData.memory) === null || _parsedData$memory === void 0 ? void 0 : _parsedData$memory.percent) || 0,\n            gpu: ((_parsedData$gpu = parsedData.gpu) === null || _parsedData$gpu === void 0 ? void 0 : _parsedData$gpu.usage) || 0,\n            predicted_cpu: ((_parsedData$predictio = parsedData.predictions) === null || _parsedData$predictio === void 0 ? void 0 : (_parsedData$predictio2 = _parsedData$predictio.cpu) === null || _parsedData$predictio2 === void 0 ? void 0 : (_parsedData$predictio3 = _parsedData$predictio2.future_values) === null || _parsedData$predictio3 === void 0 ? void 0 : _parsedData$predictio3[0]) || 0\n          }].slice(-20);\n          return newData;\n        });\n      } catch (error) {\n        console.error(\"Error processing metrics:\", error);\n      }\n    });\n    return () => socket.off(\"update_metrics\");\n  }, []);\n  const formatBytes = bytes => {\n    if (!bytes && bytes !== 0) return 'N/A';\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"System Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PredictionInfo, {\n      mlInfo: metrics.ml_info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.systemInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n        children: [\"OS: \", ((_metrics$system = metrics.system) === null || _metrics$system === void 0 ? void 0 : _metrics$system.os) || 'N/A', \" \", ((_metrics$system2 = metrics.system) === null || _metrics$system2 === void 0 ? void 0 : _metrics$system2.os_version) || '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n        children: [\"Processor: \", ((_metrics$system3 = metrics.system) === null || _metrics$system3 === void 0 ? void 0 : _metrics$system3.processor) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n        children: [\"CPU Cores: \", ((_metrics$cpu = metrics.cpu) === null || _metrics$cpu === void 0 ? void 0 : _metrics$cpu.cores) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MLInfoText, {\n        children: [\"Boot Time: \", ((_metrics$system4 = metrics.system) === null || _metrics$system4 === void 0 ? void 0 : _metrics$system4.boot_time) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.metricsGrid,\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"CPU Usage\",\n        value: `${(_metrics$cpu2 = metrics.cpu) === null || _metrics$cpu2 === void 0 ? void 0 : (_metrics$cpu2$usage = _metrics$cpu2.usage) === null || _metrics$cpu2$usage === void 0 ? void 0 : _metrics$cpu2$usage.toFixed(1)}%`,\n        color: \"#FFA500\",\n        subtext: `Predicted (1min): ${(_metrics$predictions = metrics.predictions) === null || _metrics$predictions === void 0 ? void 0 : (_metrics$predictions$ = _metrics$predictions.cpu) === null || _metrics$predictions$ === void 0 ? void 0 : (_metrics$predictions$2 = _metrics$predictions$.future_values) === null || _metrics$predictions$2 === void 0 ? void 0 : (_metrics$predictions$3 = _metrics$predictions$2[0]) === null || _metrics$predictions$3 === void 0 ? void 0 : _metrics$predictions$3.toFixed(1)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Memory Usage\",\n        value: `${(_metrics$memory = metrics.memory) === null || _metrics$memory === void 0 ? void 0 : (_metrics$memory$perce = _metrics$memory.percent) === null || _metrics$memory$perce === void 0 ? void 0 : _metrics$memory$perce.toFixed(1)}%`,\n        color: \"#4299E1\",\n        subtext: `Available: ${formatBytes((_metrics$memory2 = metrics.memory) === null || _metrics$memory2 === void 0 ? void 0 : _metrics$memory2.available)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"GPU Usage\",\n        value: (_metrics$gpu = metrics.gpu) !== null && _metrics$gpu !== void 0 && _metrics$gpu.available ? `${(_metrics$gpu2 = metrics.gpu) === null || _metrics$gpu2 === void 0 ? void 0 : (_metrics$gpu2$usage = _metrics$gpu2.usage) === null || _metrics$gpu2$usage === void 0 ? void 0 : _metrics$gpu2$usage.toFixed(1)}%` : 'N/A',\n        color: \"#48BB78\",\n        subtext: `Type: ${((_metrics$gpu3 = metrics.gpu) === null || _metrics$gpu3 === void 0 ? void 0 : _metrics$gpu3.type) || 'Not detected'} ${(_metrics$gpu4 = metrics.gpu) !== null && _metrics$gpu4 !== void 0 && _metrics$gpu4.memory ? `(${formatBytes((_metrics$gpu5 = metrics.gpu) === null || _metrics$gpu5 === void 0 ? void 0 : (_metrics$gpu5$memory = _metrics$gpu5.memory) === null || _metrics$gpu5$memory === void 0 ? void 0 : _metrics$gpu5$memory.total)})` : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"CPU Performance\",\n        value: `${(_metrics$cpu3 = metrics.cpu) === null || _metrics$cpu3 === void 0 ? void 0 : (_metrics$cpu3$frequen = _metrics$cpu3.frequency) === null || _metrics$cpu3$frequen === void 0 ? void 0 : _metrics$cpu3$frequen.toFixed(0)} MHz`,\n        color: \"#9F7AEA\",\n        subtext: `Ctx Switches: ${(_metrics$cpu4 = metrics.cpu) === null || _metrics$cpu4 === void 0 ? void 0 : (_metrics$cpu4$perform = _metrics$cpu4.performance) === null || _metrics$cpu4$perform === void 0 ? void 0 : (_metrics$cpu4$perform2 = _metrics$cpu4$perform.context_switches) === null || _metrics$cpu4$perform2 === void 0 ? void 0 : _metrics$cpu4$perform2.toLocaleString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Usage Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: historicalData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"cpu\",\n            stroke: \"#FFA500\",\n            name: \"CPU Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"predicted_cpu\",\n            stroke: \"#FF4500\",\n            strokeDasharray: \"5 5\",\n            name: \"Predicted CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"memory\",\n            stroke: \"#4299E1\",\n            name: \"Memory Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), ((_metrics$gpu6 = metrics.gpu) === null || _metrics$gpu6 === void 0 ? void 0 : _metrics$gpu6.available) && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"gpu\",\n            stroke: \"#48BB78\",\n            name: \"GPU Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), ((_metrics$predictions2 = metrics.predictions) === null || _metrics$predictions2 === void 0 ? void 0 : _metrics$predictions2.cpu) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CPU Usage Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: metrics.predictions.cpu.future_values.map((value, index) => ({\n            time: metrics.predictions.cpu.timestamps[index],\n            predicted: value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"predicted\",\n            stroke: \"#FF4500\",\n            name: \"Predicted Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.diskSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Storage Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.diskGrid,\n        children: ((_metrics$disk = metrics.disk) === null || _metrics$disk === void 0 ? void 0 : _metrics$disk.length) > 0 ? metrics.disk.map((disk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.diskCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: disk.mountpoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Used: \", formatBytes(disk.used)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Free: \", formatBytes(disk.free)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${disk.percent}%`,\n                backgroundColor: disk.percent > 90 ? '#F56565' : '#48BB78'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.diskCard,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No storage information available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.networkSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Network Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.networkGrid,\n        children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n          title: \"Data Transmitted\",\n          value: formatBytes((_metrics$network = metrics.network) === null || _metrics$network === void 0 ? void 0 : _metrics$network.bytes_sent),\n          color: \"#805AD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n          title: \"Data Received\",\n          value: formatBytes((_metrics$network2 = metrics.network) === null || _metrics$network2 === void 0 ? void 0 : _metrics$network2.bytes_recv),\n          color: \"#805AD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"YenQ3Dydq5Sj6TmzZBspUAVu2n8=\");\n_c6 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MLInfoCard\");\n$RefreshReg$(_c2, \"MLInfoGrid\");\n$RefreshReg$(_c3, \"MLInfoTitle\");\n$RefreshReg$(_c4, \"MLInfoText\");\n$RefreshReg$(_c5, \"PredictionInfo\");\n$RefreshReg$(_c6, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","MetricsCard","styles","styled","jsxDEV","_jsxDEV","socket","MLInfoCard","div","_c","MLInfoGrid","_c2","MLInfoTitle","h3","_c3","MLInfoText","p","_c4","PredictionInfo","mlInfo","_mlInfo$accuracy_metr","children","fileName","_jsxFileName","lineNumber","columnNumber","model_type","sequence_length","style","color","marginLeft","features","map","feature","index","accuracy_metrics","mse","toFixed","_c5","Dashboard","_s","_metrics$system","_metrics$system2","_metrics$system3","_metrics$cpu","_metrics$system4","_metrics$cpu2","_metrics$cpu2$usage","_metrics$predictions","_metrics$predictions$","_metrics$predictions$2","_metrics$predictions$3","_metrics$memory","_metrics$memory$perce","_metrics$memory2","_metrics$gpu","_metrics$gpu2","_metrics$gpu2$usage","_metrics$gpu3","_metrics$gpu4","_metrics$gpu5","_metrics$gpu5$memory","_metrics$cpu3","_metrics$cpu3$frequen","_metrics$cpu4","_metrics$cpu4$perform","_metrics$cpu4$perform2","_metrics$gpu6","_metrics$predictions2","_metrics$disk","_metrics$network","_metrics$network2","metrics","setMetrics","cpu","usage","frequency","cores","performance","memory","percent","available","total","swap_percent","gpu","type","predictions","ml_info","historicalData","setHistoricalData","on","data","parsedData","JSON","parse","prevMetrics","prev","_parsedData$cpu","_parsedData$memory","_parsedData$gpu","_parsedData$predictio","_parsedData$predictio2","_parsedData$predictio3","newData","time","Date","toLocaleTimeString","predicted_cpu","future_values","slice","error","console","off","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","className","container","systemInfo","system","os","os_version","processor","boot_time","metricsGrid","title","value","subtext","context_switches","toLocaleString","chartContainer","width","height","strokeDasharray","dataKey","stroke","name","timestamps","predicted","diskSection","diskGrid","disk","length","diskCard","mountpoint","used","free","progressBar","backgroundColor","networkSection","networkGrid","network","bytes_sent","bytes_recv","_c6","$RefreshReg$"],"sources":["C:/Users/KARTHIKEYA REDDY/Desktop/real/frontend/src/components/Dashboard.js"],"sourcesContent":["// Dashboard.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport MetricsCard from \"./MetricsCard\";\r\nimport styles from \"../styles/Dashboard.module.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\n// Styled Components for ML Info Section\r\nconst MLInfoCard = styled.div`\r\n  background-color: #2d2d2d;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst MLInfoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst MLInfoTitle = styled.h3`\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst MLInfoText = styled.p`\r\n  color: #ccc;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst PredictionInfo = ({ mlInfo }) => (\r\n  <MLInfoCard>\r\n    <MLInfoTitle>Machine Learning Model Details</MLInfoTitle>\r\n    <MLInfoGrid>\r\n      <div>\r\n        <MLInfoText>Model Architecture: {mlInfo.model_type}</MLInfoText>\r\n        <MLInfoText>Training Window: {mlInfo.sequence_length} seconds</MLInfoText>\r\n        <MLInfoText>Features Used:</MLInfoText>\r\n        <ul style={{ color: '#999', marginLeft: '20px' }}>\r\n          {mlInfo.features.map((feature, index) => (\r\n            <li key={index}>{feature}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <MLInfoText>Model Performance Metrics:</MLInfoText>\r\n        {mlInfo.accuracy_metrics.mse !== null ? (\r\n          <MLInfoText>Mean Squared Error: {mlInfo.accuracy_metrics.mse?.toFixed(4)}</MLInfoText>\r\n        ) : (\r\n          <MLInfoText>Collecting performance data...</MLInfoText>\r\n        )}\r\n      </div>\r\n    </MLInfoGrid>\r\n  </MLInfoCard>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [metrics, setMetrics] = useState({\r\n    cpu: { usage: 0, frequency: 0, cores: 0, performance: {} },\r\n    memory: { percent: 0, available: 0, total: 0, swap_percent: 0 },\r\n    gpu: { available: false, usage: 0, type: 'N/A', memory: null },\r\n    predictions: {},\r\n    ml_info: { model_type: '', sequence_length: 0, features: [], accuracy_metrics: { mse: null } }\r\n  });\r\n  \r\n  const [historicalData, setHistoricalData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"update_metrics\", (data) => {\r\n      try {\r\n        const parsedData = JSON.parse(data);\r\n        setMetrics(prevMetrics => ({\r\n          ...prevMetrics,\r\n          ...parsedData\r\n        }));\r\n        \r\n        // Update historical data\r\n        setHistoricalData(prev => {\r\n          const newData = [...prev, {\r\n            time: new Date().toLocaleTimeString(),\r\n            cpu: parsedData.cpu?.usage || 0,\r\n            memory: parsedData.memory?.percent || 0,\r\n            gpu: parsedData.gpu?.usage || 0,\r\n            predicted_cpu: parsedData.predictions?.cpu?.future_values?.[0] || 0\r\n          }].slice(-20);\r\n          return newData;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error processing metrics:\", error);\r\n      }\r\n    });\r\n\r\n    return () => socket.off(\"update_metrics\");\r\n  }, []);\r\n\r\n  const formatBytes = (bytes) => {\r\n    if (!bytes && bytes !== 0) return 'N/A';\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>System Monitoring Dashboard</h1>\r\n      \r\n      {/* ML Model Information */}\r\n      <PredictionInfo mlInfo={metrics.ml_info} />\r\n      \r\n      {/* System Information */}\r\n      <div className={styles.systemInfo}>\r\n        <h2>System Information</h2>\r\n        <MLInfoText>OS: {metrics.system?.os || 'N/A'} {metrics.system?.os_version || ''}</MLInfoText>\r\n        <MLInfoText>Processor: {metrics.system?.processor || 'N/A'}</MLInfoText>\r\n        <MLInfoText>CPU Cores: {metrics.cpu?.cores || 'N/A'}</MLInfoText>\r\n        <MLInfoText>Boot Time: {metrics.system?.boot_time || 'N/A'}</MLInfoText>\r\n      </div>\r\n\r\n      {/* Main Metrics Grid */}\r\n      <div className={styles.metricsGrid}>\r\n        <MetricsCard \r\n          title=\"CPU Usage\" \r\n          value={`${metrics.cpu?.usage?.toFixed(1)}%`}\r\n          color=\"#FFA500\"\r\n          subtext={`Predicted (1min): ${metrics.predictions?.cpu?.future_values?.[0]?.toFixed(1)}%`}\r\n        />\r\n        <MetricsCard \r\n          title=\"Memory Usage\" \r\n          value={`${metrics.memory?.percent?.toFixed(1)}%`}\r\n          color=\"#4299E1\"\r\n          subtext={`Available: ${formatBytes(metrics.memory?.available)}`}\r\n        />\r\n        <MetricsCard \r\n          title=\"GPU Usage\" \r\n          value={metrics.gpu?.available ? `${metrics.gpu?.usage?.toFixed(1)}%` : 'N/A'}\r\n          color=\"#48BB78\"\r\n          subtext={`Type: ${metrics.gpu?.type || 'Not detected'} ${\r\n            metrics.gpu?.memory ? `(${formatBytes(metrics.gpu?.memory?.total)})` : ''\r\n          }`}\r\n        />\r\n        <MetricsCard \r\n          title=\"CPU Performance\" \r\n          value={`${metrics.cpu?.frequency?.toFixed(0)} MHz`}\r\n          color=\"#9F7AEA\"\r\n          subtext={`Ctx Switches: ${metrics.cpu?.performance?.context_switches?.toLocaleString()}`}\r\n        />\r\n      </div>\r\n\r\n      {/* Usage Charts */}\r\n      <div className={styles.chartContainer}>\r\n        <h2>System Usage Trends</h2>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={historicalData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"cpu\" stroke=\"#FFA500\" name=\"CPU Usage\" />\r\n            <Line type=\"monotone\" dataKey=\"predicted_cpu\" stroke=\"#FF4500\" strokeDasharray=\"5 5\" name=\"Predicted CPU\" />\r\n            <Line type=\"monotone\" dataKey=\"memory\" stroke=\"#4299E1\" name=\"Memory Usage\" />\r\n            {metrics.gpu?.available && \r\n              <Line type=\"monotone\" dataKey=\"gpu\" stroke=\"#48BB78\" name=\"GPU Usage\" />\r\n            }\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Predictions Chart */}\r\n      {metrics.predictions?.cpu && (\r\n        <div className={styles.chartContainer}>\r\n          <h2>CPU Usage Forecast</h2>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={metrics.predictions.cpu.future_values.map((value, index) => ({\r\n              time: metrics.predictions.cpu.timestamps[index],\r\n              predicted: value\r\n            }))}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"time\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"predicted\" stroke=\"#FF4500\" name=\"Predicted Usage\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n\r\n      {/* Disk Usage */}\r\n<div className={styles.diskSection}>\r\n  <h2>Storage Analysis</h2>\r\n  <div className={styles.diskGrid}>\r\n    {metrics.disk?.length > 0 ? (\r\n      metrics.disk.map((disk, index) => (\r\n        <div key={index} className={styles.diskCard}>\r\n          <h3>{disk.mountpoint}</h3>\r\n          <p>Used: {formatBytes(disk.used)}</p>\r\n          <p>Free: {formatBytes(disk.free)}</p>\r\n          <div className={styles.progressBar}>\r\n            <div \r\n              style={{ \r\n                width: `${disk.percent}%`,\r\n                backgroundColor: disk.percent > 90 ? '#F56565' : '#48BB78'\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div className={styles.diskCard}>\r\n        <h3>No storage information available</h3>\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n      {/* Network Statistics */}\r\n      <div className={styles.networkSection}>\r\n        <h2>Network Activity</h2>\r\n        <div className={styles.networkGrid}>\r\n          <MetricsCard \r\n            title=\"Data Transmitted\" \r\n            value={formatBytes(metrics.network?.bytes_sent)}\r\n            color=\"#805AD5\"\r\n          />\r\n          <MetricsCard \r\n            title=\"Data Received\" \r\n            value={formatBytes(metrics.network?.bytes_recv)}\r\n            color=\"#805AD5\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}