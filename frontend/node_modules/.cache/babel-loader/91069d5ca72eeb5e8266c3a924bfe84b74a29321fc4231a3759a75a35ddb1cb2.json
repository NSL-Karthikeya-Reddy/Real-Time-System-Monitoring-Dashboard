{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTHIKEYA REDDY\\\\Desktop\\\\real\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport MetricsCard from \"./MetricsCard\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport styles from \"../styles/Dashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst Dashboard = () => {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [latest, setLatest] = useState({\n    cpu: 0,\n    ram: 0,\n    gpu: 0,\n    cpu_prediction: 0\n  });\n  useEffect(() => {\n    socket.on(\"update_metrics\", data => {\n      const parsedData = JSON.parse(data);\n      setLatest(parsedData);\n      setMetrics(prev => [...prev.slice(-20), parsedData]);\n    });\n    return () => socket.off(\"update_metrics\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"\\uD83C\\uDFAC Netflix System Monitor \\uD83C\\uDF7F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"\\uD83D\\uDD25 CPU Usage\",\n        value: `${latest.cpu}%`,\n        color: \"yellow\",\n        subtext: `Prediction: ${latest.cpu_prediction}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"\\uD83D\\uDCBE RAM Usage\",\n        value: `${latest.ram}%`,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"\\uD83C\\uDFAE GPU Usage\",\n        value: `${latest.gpu}%`,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.chartTitle,\n        children: \"\\uD83D\\uDCCA CPU Usage Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: metrics,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"gray\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\",\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"cpu\",\n            stroke: \"#FFA500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"cpu_prediction\",\n            stroke: \"#FF4500\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Yw93XGhIjJWRUGpAWf//Rpp81yo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","MetricsCard","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","styles","jsxDEV","_jsxDEV","socket","Dashboard","_s","metrics","setMetrics","latest","setLatest","cpu","ram","gpu","cpu_prediction","on","data","parsedData","JSON","parse","prev","slice","off","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","grid","value","color","subtext","chartContainer","chartTitle","width","height","strokeDasharray","stroke","dataKey","type","_c","$RefreshReg$"],"sources":["C:/Users/KARTHIKEYA REDDY/Desktop/real/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport MetricsCard from \"./MetricsCard\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport styles from \"../styles/Dashboard.module.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst Dashboard = () => {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [latest, setLatest] = useState({ cpu: 0, ram: 0, gpu: 0, cpu_prediction: 0 });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"update_metrics\", (data) => {\r\n      const parsedData = JSON.parse(data);\r\n      setLatest(parsedData);\r\n      setMetrics((prev) => [...prev.slice(-20), parsedData]);\r\n    });\r\n\r\n    return () => socket.off(\"update_metrics\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>üé¨ Netflix System Monitor üçø</h1>\r\n      \r\n      {/* Metrics Display */}\r\n      <div className={styles.grid}>\r\n        <MetricsCard title=\"üî• CPU Usage\" value={`${latest.cpu}%`} color=\"yellow\" subtext={`Prediction: ${latest.cpu_prediction}%`} />\r\n        <MetricsCard title=\"üíæ RAM Usage\" value={`${latest.ram}%`} color=\"blue\" />\r\n        <MetricsCard title=\"üéÆ GPU Usage\" value={`${latest.gpu}%`} color=\"green\" />\r\n      </div>\r\n\r\n      {/* CPU Usage Chart */}\r\n      <div className={styles.chartContainer}>\r\n        <h2 className={styles.chartTitle}>üìä CPU Usage Over Time</h2>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={metrics}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"gray\" />\r\n            <XAxis dataKey=\"time\" stroke=\"white\" />\r\n            <YAxis stroke=\"white\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"cpu\" stroke=\"#FFA500\" />\r\n            <Line type=\"monotone\" dataKey=\"cpu_prediction\" stroke=\"#FF4500\" strokeDasharray=\"5 5\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}