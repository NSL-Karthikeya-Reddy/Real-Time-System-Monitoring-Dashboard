{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTHIKEYA REDDY\\\\Desktop\\\\real\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from \"recharts\";\nimport styles from \"../styles/Dashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst MetricsCard = ({\n  title,\n  value,\n  subtext,\n  color = \"white\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: styles.card,\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: color,\n      fontSize: '1.5rem',\n      fontWeight: 'bold'\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), subtext && /*#__PURE__*/_jsxDEV(\"p\", {\n    className: styles.subtext,\n    children: subtext\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = MetricsCard;\nconst formatBytes = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\nconst Dashboard = () => {\n  _s();\n  var _metrics$cpu$usage, _metrics$memory$perce, _metrics$gpu$usage, _metrics$memory$swap_;\n  const [metrics, setMetrics] = useState({\n    cpu: {\n      usage: 0\n    },\n    memory: {\n      percent: 0\n    },\n    gpu: {\n      usage: 0\n    },\n    disk: [],\n    network: {},\n    system: {},\n    predictions: {\n      cpu: 0\n    }\n  });\n  const [historicalData, setHistoricalData] = useState([]);\n  useEffect(() => {\n    socket.on(\"update_metrics\", data => {\n      const parsedData = JSON.parse(data);\n      setMetrics(parsedData);\n\n      // Update historical data for charts\n      setHistoricalData(prev => {\n        const newData = [...prev, {\n          time: new Date().toLocaleTimeString(),\n          cpu: parsedData.cpu.usage,\n          memory: parsedData.memory.percent,\n          gpu: parsedData.gpu.usage || 0,\n          predicted_cpu: parsedData.predictions.cpu\n        }].slice(-20);\n        return newData;\n      });\n    });\n    return () => socket.off(\"update_metrics\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enhanced System Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.systemInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"OS: \", metrics.system.os, \" \", metrics.system.os_version]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processor: \", metrics.system.processor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Boot Time: \", metrics.system.boot_time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.metricsGrid,\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"CPU Usage\",\n        value: `${(_metrics$cpu$usage = metrics.cpu.usage) === null || _metrics$cpu$usage === void 0 ? void 0 : _metrics$cpu$usage.toFixed(1)}%`,\n        subtext: `Prediction: ${metrics.predictions.cpu}%`,\n        color: \"#FFA500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Memory Usage\",\n        value: `${(_metrics$memory$perce = metrics.memory.percent) === null || _metrics$memory$perce === void 0 ? void 0 : _metrics$memory$perce.toFixed(1)}%`,\n        subtext: `Available: ${formatBytes(metrics.memory.available)}`,\n        color: \"#4299E1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"GPU Usage\",\n        value: metrics.gpu.available ? `${(_metrics$gpu$usage = metrics.gpu.usage) === null || _metrics$gpu$usage === void 0 ? void 0 : _metrics$gpu$usage.toFixed(1)}%` : 'N/A',\n        subtext: `Type: ${metrics.gpu.type || 'Not detected'}`,\n        color: \"#48BB78\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Swap Usage\",\n        value: `${(_metrics$memory$swap_ = metrics.memory.swap_percent) === null || _metrics$memory$swap_ === void 0 ? void 0 : _metrics$memory$swap_.toFixed(1)}%`,\n        color: \"#9F7AEA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CPU & Memory Usage Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: historicalData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"cpu\",\n            stroke: \"#FFA500\",\n            name: \"CPU Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"predicted_cpu\",\n            stroke: \"#FF4500\",\n            strokeDasharray: \"5 5\",\n            name: \"Predicted CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"memory\",\n            stroke: \"#4299E1\",\n            name: \"Memory Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.diskSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Disk Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.diskGrid,\n        children: metrics.disk.map((disk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.diskCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: disk.mountpoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Used: \", formatBytes(disk.used)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Free: \", formatBytes(disk.free)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${disk.percent}%`,\n                backgroundColor: disk.percent > 90 ? '#F56565' : '#48BB78'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.networkSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Network Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.networkGrid,\n        children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n          title: \"Data Sent\",\n          value: formatBytes(metrics.network.bytes_sent),\n          color: \"#805AD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n          title: \"Data Received\",\n          value: formatBytes(metrics.network.bytes_recv),\n          color: \"#805AD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fcBiiGOsQlHiynt0YkrwDXWAgmk=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetricsCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","styles","jsxDEV","_jsxDEV","socket","MetricsCard","title","value","subtext","color","className","card","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","fontWeight","_c","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","Dashboard","_s","_metrics$cpu$usage","_metrics$memory$perce","_metrics$gpu$usage","_metrics$memory$swap_","metrics","setMetrics","cpu","usage","memory","percent","gpu","disk","network","system","predictions","historicalData","setHistoricalData","on","data","parsedData","JSON","parse","prev","newData","time","Date","toLocaleTimeString","predicted_cpu","slice","off","container","systemInfo","os","os_version","processor","boot_time","metricsGrid","available","type","swap_percent","chartContainer","width","height","strokeDasharray","dataKey","stroke","name","diskSection","diskGrid","map","index","diskCard","mountpoint","used","free","progressBar","backgroundColor","networkSection","networkGrid","bytes_sent","bytes_recv","_c2","$RefreshReg$"],"sources":["C:/Users/KARTHIKEYA REDDY/Desktop/real/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from \"recharts\";\r\nimport styles from \"../styles/Dashboard.module.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst MetricsCard = ({ title, value, subtext, color = \"white\" }) => (\r\n  <div className={styles.card}>\r\n    <h3>{title}</h3>\r\n    <p style={{ color: color, fontSize: '1.5rem', fontWeight: 'bold' }}>{value}</p>\r\n    {subtext && <p className={styles.subtext}>{subtext}</p>}\r\n  </div>\r\n);\r\n\r\nconst formatBytes = (bytes) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [metrics, setMetrics] = useState({\r\n    cpu: { usage: 0 },\r\n    memory: { percent: 0 },\r\n    gpu: { usage: 0 },\r\n    disk: [],\r\n    network: {},\r\n    system: {},\r\n    predictions: { cpu: 0 }\r\n  });\r\n  \r\n  const [historicalData, setHistoricalData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"update_metrics\", (data) => {\r\n      const parsedData = JSON.parse(data);\r\n      setMetrics(parsedData);\r\n      \r\n      // Update historical data for charts\r\n      setHistoricalData(prev => {\r\n        const newData = [...prev, {\r\n          time: new Date().toLocaleTimeString(),\r\n          cpu: parsedData.cpu.usage,\r\n          memory: parsedData.memory.percent,\r\n          gpu: parsedData.gpu.usage || 0,\r\n          predicted_cpu: parsedData.predictions.cpu\r\n        }].slice(-20);\r\n        return newData;\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"update_metrics\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Enhanced System Monitoring Dashboard</h1>\r\n      \r\n      {/* System Information */}\r\n      <div className={styles.systemInfo}>\r\n        <h2>System Information</h2>\r\n        <p>OS: {metrics.system.os} {metrics.system.os_version}</p>\r\n        <p>Processor: {metrics.system.processor}</p>\r\n        <p>Boot Time: {metrics.system.boot_time}</p>\r\n      </div>\r\n\r\n      {/* Main Metrics Grid */}\r\n      <div className={styles.metricsGrid}>\r\n        <MetricsCard \r\n          title=\"CPU Usage\" \r\n          value={`${metrics.cpu.usage?.toFixed(1)}%`}\r\n          subtext={`Prediction: ${metrics.predictions.cpu}%`}\r\n          color=\"#FFA500\"\r\n        />\r\n        <MetricsCard \r\n          title=\"Memory Usage\" \r\n          value={`${metrics.memory.percent?.toFixed(1)}%`}\r\n          subtext={`Available: ${formatBytes(metrics.memory.available)}`}\r\n          color=\"#4299E1\"\r\n        />\r\n        <MetricsCard \r\n          title=\"GPU Usage\" \r\n          value={metrics.gpu.available ? `${metrics.gpu.usage?.toFixed(1)}%` : 'N/A'}\r\n          subtext={`Type: ${metrics.gpu.type || 'Not detected'}`}\r\n          color=\"#48BB78\"\r\n        />\r\n        <MetricsCard \r\n          title=\"Swap Usage\" \r\n          value={`${metrics.memory.swap_percent?.toFixed(1)}%`}\r\n          color=\"#9F7AEA\"\r\n        />\r\n      </div>\r\n\r\n      {/* CPU Usage Chart */}\r\n      <div className={styles.chartContainer}>\r\n        <h2>CPU & Memory Usage Over Time</h2>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={historicalData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"cpu\" stroke=\"#FFA500\" name=\"CPU Usage\" />\r\n            <Line type=\"monotone\" dataKey=\"predicted_cpu\" stroke=\"#FF4500\" strokeDasharray=\"5 5\" name=\"Predicted CPU\" />\r\n            <Line type=\"monotone\" dataKey=\"memory\" stroke=\"#4299E1\" name=\"Memory Usage\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Disk Usage */}\r\n      <div className={styles.diskSection}>\r\n        <h2>Disk Usage</h2>\r\n        <div className={styles.diskGrid}>\r\n          {metrics.disk.map((disk, index) => (\r\n            <div key={index} className={styles.diskCard}>\r\n              <h3>{disk.mountpoint}</h3>\r\n              <p>Used: {formatBytes(disk.used)}</p>\r\n              <p>Free: {formatBytes(disk.free)}</p>\r\n              <div className={styles.progressBar}>\r\n                <div \r\n                  style={{ \r\n                    width: `${disk.percent}%`,\r\n                    backgroundColor: disk.percent > 90 ? '#F56565' : '#48BB78'\r\n                  }} \r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Network Statistics */}\r\n      <div className={styles.networkSection}>\r\n        <h2>Network Statistics</h2>\r\n        <div className={styles.networkGrid}>\r\n          <MetricsCard \r\n            title=\"Data Sent\" \r\n            value={formatBytes(metrics.network.bytes_sent)}\r\n            color=\"#805AD5\"\r\n          />\r\n          <MetricsCard \r\n            title=\"Data Received\" \r\n            value={formatBytes(metrics.network.bytes_recv)}\r\n            color=\"#805AD5\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}